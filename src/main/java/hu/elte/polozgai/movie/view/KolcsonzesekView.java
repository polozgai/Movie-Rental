package hu.elte.polozgai.movie.view;

import hu.elte.polozgai.movie.controller.KolcsonzesekController;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author polozgai
 */
public class KolcsonzesekView extends javax.swing.JFrame {

    private KolcsonzesekController controller;
    private List<String> osszesKolcsonzesekLista;
    private List<String> kintlevoKolcsonzesekLista;
    private List<String> keresesLista;
    private DefaultTableModel model1;
    private String jTextFieldTemp;
            
    /**
     * {@link KolcsonzesekView} konstruálása.
     * @param controller {@link KolcsonzesekController}
     */
    public KolcsonzesekView(KolcsonzesekController controller) {
        initComponents();
        this.controller=controller;
        model1= (DefaultTableModel) kolcsonzesTabla.getModel();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        osszesKolcsonzesekLista=this.controller.getKolcsonzesekLista();
        kintlevoKolcsonzesekLista=new ArrayList<String>();
        keresesLista=new ArrayList<String>();
        getListak();
        startTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        keresesButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        kolcsonzesTabla = new javax.swing.JTable();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kölcsönzések");

        jLabel1.setText("Keresés (csak névre lehet):");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        keresesButton.setText("Keresés");
        keresesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keresesButtonActionPerformed(evt);
            }
        });

        kolcsonzesTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cím", "Rendezõ", "Barát", "Kikölcsönzés", "Lejárat"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        kolcsonzesTabla.setEnabled(false);
        jScrollPane1.setViewportView(kolcsonzesTabla);

        jCheckBox1.setText("Lejárt kölcsönzések");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(keresesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(keresesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void keresesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keresesButtonActionPerformed
        if(jTextFieldTemp!=null){
            if(jTextFieldTemp.matches("[0-9]+")){
                JOptionPane.showMessageDialog(new JFrame(), "Szöveggel töltse ki!", "Hiba", JOptionPane.ERROR_MESSAGE);
            }else{
                deleteTabla();
                controller.keresesNev(jTextFieldTemp);
                keresesLista=controller.getKeresesLista();
                getRows(keresesLista);
            }
        }

    }//GEN-LAST:event_keresesButtonActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        jTextFieldTemp=jTextField1.getText();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        deleteTabla();
        if(jCheckBox1.isSelected()){
            getRows(osszesKolcsonzesekLista);
        }else{
            startTabla();
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    
    private void deleteTabla(){
        model1 = (DefaultTableModel) kolcsonzesTabla.getModel();
        for(int i=model1.getRowCount()-1;i>-1;i--){
            model1.removeRow(i);
        }
    }
    
    
    private void getListak(){
        String[] kolcsonzes=null;
        Date today=new Date();
        Date lejarat=null;
        for(int i=0;i<osszesKolcsonzesekLista.size();i++){
            kolcsonzes=osszesKolcsonzesekLista.get(i).split("_");
            DateFormat formatter=new SimpleDateFormat("yyyy-MM-dd");
            try{
                lejarat=formatter.parse(kolcsonzes[4]);
            }catch(Exception e){}
            if(lejarat.after(today)){
                kintlevoKolcsonzesekLista.add(osszesKolcsonzesekLista.get(i));
            }
        }
    }
    
    
    
    
    private void startTabla() {
        getRows(kintlevoKolcsonzesekLista);
    }
    
    private void getRows(List<String> lista){
        String[] kolcsonzes;
        for(int i=0;i<lista.size();i++){
            model1.addRow(new Object[]{null, null, null, null, null});
        }
        for(int i=0;i<lista.size();i++){
            kolcsonzes=lista.get(i).split("_");
            kolcsonzesTabla.setValueAt(kolcsonzes[0], i, 0);
            kolcsonzesTabla.setValueAt(kolcsonzes[1], i, 1);
            kolcsonzesTabla.setValueAt(kolcsonzes[2], i, 2);
            kolcsonzesTabla.setValueAt(kolcsonzes[3], i, 3);
            kolcsonzesTabla.setValueAt(kolcsonzes[4], i, 4);
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton keresesButton;
    private javax.swing.JTable kolcsonzesTabla;
    // End of variables declaration//GEN-END:variables

 
}
